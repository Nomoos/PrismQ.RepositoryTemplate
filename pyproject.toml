[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "prismq-module-template"
version = "0.1.0"
description = "PrismQ module template for AI-powered content generation"
readme = "README.md"
requires-python = ">=3.14"
license = {text = "Proprietary"}
authors = [
    {name = "PrismQ", email = "dev@prismq.com"}
]
keywords = ["prismq", "ai", "content-generation", "template"]

dependencies = [
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",  # ReadTheDocs theme
]
logging = [
    "psutil>=5.9.0",  # For detailed hardware information in logs
]

[tool.setuptools]
# Only include src/ in the package (core infrastructure)
packages = ["src"]

[tool.setuptools.package-data]
src = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["_meta/tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=src --cov-report=html --cov-report=term"

[tool.ruff]
# PEP 8 compliance
line-length = 100
target-version = "py314"

[tool.ruff.lint]
# Enable PEP 8 style checks, docstrings (PEP 257), type annotations, and more
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "D",      # pydocstyle (PEP 257)
    "UP",     # pyupgrade
    "ANN",    # flake8-annotations (PEP 484, 526)
    "S",      # flake8-bandit
    "B",      # flake8-bugbear
    "A",      # flake8-builtins
    "C4",     # flake8-comprehensions
    "T20",    # flake8-print
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "ARG",    # flake8-unused-arguments
    "PTH",    # flake8-use-pathlib
    "PL",     # pylint
]
ignore = [
    "D203",   # one-blank-line-before-class (conflicts with D211)
    "D213",   # multi-line-summary-second-line (conflicts with D212)
]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings (PEP 257)
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D", "ANN"]  # Allow assert, no docstrings required in tests

[tool.mypy]
# PEP 484, 526, 544, 561 compliance
# Note: Type checking applies to src/ (core package).
python_version = "3.14"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
disallow_any_explicit = false
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
extra_checks = true
# PEP 561: Enable type hint distribution
namespace_packages = true
explicit_package_bases = true
